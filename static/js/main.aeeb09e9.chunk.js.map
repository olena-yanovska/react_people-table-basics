{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","cn","sex","name","PeoplePage","memo","useState","isError","setIsError","people","setPeople","isLoading","setIsLoading","isLoadingFinish","setIsLoadingFinish","useParams","loadPeople","loadedPeople","preparedPeople","map","mother","find","mom","motherName","father","dad","fatherName","useEffect","length","born","died","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aeeb09e9.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import React, { memo, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingFinish, setIsLoadingFinish] = useState(false);\n  const { slug } = useParams();\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      const preparedPeople = loadedPeople.map(person => {\n        const mother = loadedPeople.find(mom => (\n          mom.name === person.motherName));\n        const father = loadedPeople.find(dad => (\n          dad.name === person.fatherName));\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(preparedPeople);\n    } catch (error) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n      setIsLoadingFinish(true);\n    }\n  };\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoadingFinish(false);\n    loadPeople();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isLoadingFinish && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped\n                  is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={cn({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother\n                        ? <PersonLink person={person.mother} />\n                        : person.motherName || '-'}\n                    </td>\n                    <td>\n                      {person.father\n                        ? <PersonLink person={person.father} />\n                        : person.fatherName || '-'}\n                    </td>\n                  </tr>\n                ))}\n\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import cn from 'classnames';\nimport React from 'react';\nimport {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => cn('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => cn('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <div className=\"container\">\n                <h1 className=\"title\">Home Page</h1>\n              </div>\n            )}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}