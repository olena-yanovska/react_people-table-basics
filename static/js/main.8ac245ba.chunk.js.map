{"version":3,"sources":["components/NavBar/NavBar.tsx","pages/HomePage/HomePage.tsx","pages/NotFountPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/TableRow/TableRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","to","isActive","cn","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","TableRow","memo","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","PeoplePage","useState","isError","setIsError","setPeople","isLoading","setIsLoading","isLoadingFinish","setIsLoadingFinish","loadPeople","loadedPeople","preparedPeople","find","mom","dad","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8ac245ba.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { memo } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person,\n}\n\nexport const TableRow: React.FC<Props> = memo(({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={cn({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? <PersonLink person={person.mother} />\n          : person.motherName || '-'}\n      </td>\n      <td>\n        {person.father\n          ? <PersonLink person={person.father} />\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n});\n","import { Person } from '../../types';\nimport { TableRow } from '../TableRow/TableRow';\n\ninterface Props {\n  people: Person[]\n}\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <TableRow person={person} />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import React, { memo, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingFinish, setIsLoadingFinish] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      const preparedPeople = loadedPeople.map(person => {\n        const mother = loadedPeople.find(mom => (\n          mom.name === person.motherName));\n        const father = loadedPeople.find(dad => (\n          dad.name === person.fatherName));\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(preparedPeople);\n    } catch (error) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n      setIsLoadingFinish(true);\n    }\n  };\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoadingFinish(false);\n    loadPeople();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isLoadingFinish && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { NotFoundPage } from './pages/NotFountPage/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}